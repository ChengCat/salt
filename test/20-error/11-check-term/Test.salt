
-- Trigger all the errors that can be produced by checkTerm.

-- (t-the) --------------------------------------------------------------------
-- Error: type does not match ascription.
test type the #Nat. #true


-- (t-run) --------------------------------------------------------------------
-- Error: value to run is not a suspension.
test type run #true


-- (t-prm) --------------------------------------------------------------------
-- Error: unknown primitive.
test type #derp


-- (t-con) --------------------------------------------------------------------
-- Error: unknown data constructor.
test type Derp


-- (t-var) --------------------------------------------------------------------
-- Error: unknown term variable.
test type x


-- (t-abt) --------------------------------------------------------------------
-- Error: parameter annotation from the wrong universe.
test type (λ@[a: #Nat] → #unit)

-- Error: parameter annotation is ill-formed.
test type (λ@[a: #Data #Data] → #unit)

-- Error: body must produce a value.
test type (λ@[a: #Data] → [])

-- Error: body is not pure.
test type (λ@[a: #Data] → do { #console'print "derp"; #unit })


-- (t-abm) --------------------------------------------------------------------
-- Error: parameter type in wrong universe.
test type (λ[x: #Data] → [])

-- Error: parameter annotation is ill kinded.
test type (λ[x: #Nat #Nat] → [])

-- Error: parameter annotation does not have data kind.
test type (λ[x: #Console] → [])

-- Error: body is not pure.
test type (λ[x: #Text] → #console'print "derp")


-- (t-aps) --------------------------------------------------------------------
-- (app term/types) -------------------
-- Error: cannot instantiate non-polymorphic value.
test type 5 @#Nat

-- Error: not enough arguments in type application.
test type (λ@[a: #Data, b: #Data] → #unit) @[#Nat]

-- Error: too many arguments in type application.
test type (λ@[a: #Data] → #unit) @[#Nat, #Nat]

-- Error: kind mismatch in application.
test type (λ@[a: #Data] → #unit) @#Console

-- (app term/terms) -------------------
-- Error: cannot apply non function.
test type 5 [1, 2]

-- Error: not enough arguments.
test type #bool'and [#true]

-- Error: too many arguments.
test type #bool'and [#true, #true, #true]

-- Error: wrong argument types.
test type #bool'and [1, 2]

-- (app term/term) --------------------
-- Error: cannot apply non function.
test type 5 5

-- Error: not enough arguments.
test type #bool'and #true

-- Error: too many arguments.
test type #bool'and ((λ[] → [#true, #true, #true]) [])

-- Error: wrong argument types.
test type #bool'and ((λ[] → [1, 2]) [])

