term addr'allocandfree : []! #Memory
 = box private r with {} in do
     s = #sizeOf @[#Word8]
     p = #allocAddr s
     #freeAddr p

test exec addr'allocandfree

term ptr'allocandfree : []! #Memory
 = box private r with {Alloc; Write; Read} in do
     p = #allocPtr @[r, #Word8]
     #freePtr @[r, #Word8] p

test exec ptr'allocandfree

term sizeOf'metley : []! #Console
 = box do
     #console'println (#word64'show (#sizeOf @[#Bool]))
     #console'println (#word64'show (#sizeOf @[#Int8]))
     #console'println (#word64'show (#sizeOf @[#Int16]))
     #console'println (#word64'show (#sizeOf @[#Int32]))
     #console'println (#word64'show (#sizeOf @[#Int64]))
     #console'println (#word64'show (#sizeOf @[#Word8]))
     #console'println (#word64'show (#sizeOf @[#Word16]))
     #console'println (#word64'show (#sizeOf @[#Word32]))
     #console'println (#word64'show (#sizeOf @[#Word64]))
     #console'println (#word64'show (#sizeOf @[#Addr]))

test exec sizeOf'metley

term sizeOf'ptr : []! #Console
 = box private r with {Alloc; Read; Write} in do
     s = #sizeOf @[#Ptr [r, #Word8]]
     #console'println (#word64'show s)

test exec sizeOf'ptr

term addr'endtoend : []! #Console + #Memory
 = box private r with {Alloc; Read; Write} in do
     s = #sizeOf @[#Word64]
     p = #allocAddr s
     v1 = #readAddr @[#Word64] p
     #writeAddr @[#Word64] [p, #word64'12]
     v2 = #readAddr @[#Word64] p
     #writeAddr @[#Word64] [p, #word64'143]
     v3 = #readAddr @[#Word64] p
     #console'println (#word64'show v1)
     #console'println (#word64'show v2)
     #console'println (#word64'show v3)

test exec addr'endtoend
