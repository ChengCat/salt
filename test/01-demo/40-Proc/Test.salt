
term derp [n: #Nat]: #Nat ! #Console
 = box proc
   seq x = yield 5;
   seq y = yield the <foo: #Nat> of `foo 4;
   seq call #console'print "derp";
   when #nat'eq [x, 0] return 3;
   cell n: #Nat ← 0;
   loop call #console'print "derp";
   yield [3]


term derps [n: #Nat]: #Nat ! #Console
 = box proc do
   seq x = yield 5
   seq y = yield the <foo: #Nat> of `foo 4
   seq call #console'print "derp"
   when #nat'eq [x, 0] return 3
   cell n: #Nat ← 0
   loop call #console'print "derp"
   yield [n]


-- term derp [n: #Nat]: #Nat ! #Console
--  = box proc #Nat of
--    seq {
--         let x = 5;
--         let y = the <foo: #Nat> of `foo 4;
--         #console'print "derp";
--         if #nat'eq [x, 0] then return 3;
--         case y of { foo [x: #Nat] → return x }
--         cel n : #Nat ← 0
--         return 5
--    }


