
-- Recursive functions over built-in lists.

-- Length
-- TODO: generalize record and variant types to hold multiple values per field.
term length @[a: #Data] [xx: #List a]: #Nat
 = case #list'case @a xx of
        { nil  [u: #Unit] → 0
        ; cons [x: [head: a, tail: #List a]] → #nat'add [1, length @a xx] }

test eval length5 = length @#Nat [list #Nat| 10, 11, 12, 13, 14]
