

proc fac [n: #Nat]: #Nat
 = if   { #nat'eq [n, 0] → 4 }
   else #nat'mul [n, fac [#nat'sub [n, 1]]]


-- proc derp [n: #Nat]: #Nat
--  = let  x: #Nat = 4;
--    seq  let x = #nat'add [4, 5];
--         if #nat'eq [3, 4] then return 4 else derp;
--         case n of { bar [] → return 5 };
--         cell n: #Nat ← 0;
--         loop seq
--                 if #nat'eq [n, 0] then break;
--                 n ← 4;
--                 #console'print "bar";
--                 #console'print "baz";
--         end
--         #console'print "qux"
--    end

